# Generated by Django 5.1.1 on 2025-08-15 08:33

from django.db import migrations


def convert_track_values(apps, schema_editor):
    """Convert old single/double letter codes to human-readable values"""
    Race = apps.get_model('api', 'Race')

    # Track Configuration mapping
    config_mapping = {
        'L': 'left_handed',
        'R': 'right_handed',
        'S': 'straight'
    }

    # Track Condition mapping
    condition_mapping = {
        'F': 'fast',
        'Z': 'frozen',
        'G': 'good',
        'H': 'heavy',
        'M': 'muddy',
        'S': 'sloppy',
        'L': 'slow',
        'W': 'wet_fast',
        'FM': 'firm',
        'HD': 'hard',
        'SF': 'soft',
        'YL': 'yielding',
        'ST': 'standard',
        'HR': 'harsh'
    }

    # Update all existing races
    for race in Race.objects.all():
        if race.track_configuration in config_mapping:
            race.track_configuration = config_mapping[race.track_configuration]
        if race.track_condition in condition_mapping:
            race.track_condition = condition_mapping[race.track_condition]
        race.save()


def reverse_track_values(apps, schema_editor):
    """Reverse the conversion for rollback"""
    Race = apps.get_model('api', 'Race')

    # Reverse mappings
    config_mapping = {
        'left_handed': 'L',
        'right_handed': 'R',
        'straight': 'S'
    }

    condition_mapping = {
        'fast': 'F',
        'frozen': 'Z',
        'good': 'G',
        'heavy': 'H',
        'muddy': 'M',
        'sloppy': 'S',
        'slow': 'L',
        'wet_fast': 'W',
        'firm': 'FM',
        'hard': 'HD',
        'soft': 'SF',
        'yielding': 'YL',
        'standard': 'ST',
        'harsh': 'HR'
    }

    # Update all existing races back to old format
    for race in Race.objects.all():
        if race.track_configuration in config_mapping:
            race.track_configuration = config_mapping[race.track_configuration]
        if race.track_condition in condition_mapping:
            race.track_condition = condition_mapping[race.track_condition]
        race.save()


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_alter_race_track_condition_and_more'),
    ]

    operations = [
        migrations.RunPython(convert_track_values, reverse_track_values),
    ]
